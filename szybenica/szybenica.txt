#include <iostream>
#include "windows.h"
#include <vector>
using namespace std;
#pragma warning (disable:4996)

void Color(int color) // малюнки будуть кольоровими
{
	HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
	SetConsoleTextAttribute(hConsole, color);
}

void Message(int color, string text)
{
	Color(color);
	cout << text;
	Color(7);
}

class AbstractVocabulary // тестую два варіанти ініціалізації словника
{
protected:
	vector<string> words;
	int size;
	int maxwordlength;
public:
	virtual string GetWord(int num) = 0;
	virtual int GetSize() = 0;
	virtual int GetMaxWordLength() = 0;
	virtual void Show() = 0;

	~AbstractVocabulary()
	{}
};

class Vocabulary : public AbstractVocabulary// вбудований словник
{
private:
	vector<string> words;
	int size;
	int maxwordlength;

public:
	Vocabulary()
	{
		/*список слів*/
		words = { "абетка", "абітурієнт", "абрикос", "абсолютизм", "абсорбент", "абстракціонізм", "абсурд", "авангард", "авіакомпанія", "авіакомпас", "авіалінія", "австралія", "автобус", "автограф", "автомобіль", "авторитет", "авторитет", "авторучка", "автостоп", "автострада", "автотранспорт", "агат", "агат", "агент", "агент", "агентство", "агентство", "агентура", "агенція", "агрегат", "агресія", "агресор", "агроном", "агрономія", "ад’ютант", "адвокат", "аденоїд", "адміністрація", "адмірал", "адреса", "аеродром", "аерозоль", "аеропорт", "ажіотаж", "азарт", "азимут", "айсберг", "академік", "академія", "академконцерт", "акафіст", "акваланг", "акварель", "акваріум", "акомпанемент", "акорд", "акордеон", "активіст", "актор", "акула", "акумулятор", "акуратно", "акустика", "акушер", "акушерка", "акціонер", "акція", "алігатор", "алфавіт", "альбом", "альпеншток", "альпінізм", "альпініст", "альт", "альтернатива", "амбіція", "амнезія", "амплітуда", "амплуа", "амуніція", "амфібія", "амфітеатр", "амфора", "аналіз", "аналітик", "аналог", "анамнез", "ананас", "анархіст", "анатомія", "анафора", "ангажемент", "ангел", "андроїд", "анекдот", "анемія", "анестезіолог", "анестезія", "аніматор", "аніме", "анкета", "анклав", "аннотація", "анод", "анонс", "ансамбль", "антагонізм", "антарктика", "антена", "антибіотик", "антивірус", "антиген", "антиквар", "антисемітизм", "антисептик", "антициклон", "античність", "антракт", "антураж", "апарат", "апаратура", "апаратурист", "апаратчик", "апатія", "апельсин", "аперитив", "апетит", "аплодисменти", "апокаліпсис", "апологет", "апологія", "апостол", "апостроф", "аптека", "арбітр", "арбітраж", "аргумент", "ареал", "арена", "арешт", "аристократ", "арія", "арка", "аркуш", "арматура", "армія", "аромат", "ароматизатор", "арсенал", "артеріографія", "артерія", "артикул", "артикуляція", "артист", "артистка", "археолог", "археологія", "архів", "архіваріус", "архіпелаг", "архітектор", "архітектура", "асиметрія", "асоціація", "аспект", "аспірант", "астролог", "астронавт", "астроном", "астрономія", "асфальт", "ательє", "атлас", "атом", "аудит", "аудитор", "аудиторія", "аутсайдер", "афера", "афіша", "баг", "багаж", "багатство", "багнет", "бажання", "бал", "баланс", "баласт", "балерина", "балет", "балістика", "балка", "балкон", "бамбук", "банан", "бандура", "банк", "банкет", "банкір", "банкнота", "баня", "бар", "барабан", "барабанщик", "баракуда", "баран", "барвінок", "барельєф", "баржа", "барикада", "бариста", "бармалей", "бармен", "барокамера", "бароко", "барон", "баррикада", "бас", "басейн", "баскетбол", "баскетболіст", "басова", "батальйон", "батискаф", "батіг", "батог", "батога", "батут", "батьківщина", "башмак", "башта", "баян", "бедро", "безмозок", "безпека", "безробіття", "белетристика", "берег", "береза", "берет", "бетон", "бетонозмішувач", "бетонщик", "билина", "било", "біатлон", "біатлоніст", "блокування", "брязкало", "бубон", "вага", "вагон", "вагонетка", "вагранка", "важіль", "важливість", "вазон", "вакансія", "вакцина", "вал", "валеріана", "валіза", "вальс", "валюта", "вандал", "ванна", "вантаж", "вантажівка", "вареник", "варіант", "вата", "ватажок", "ватман", "вафля", "вахтер", "вбрання", "вгору", "вдова", "вегетаріанець", "ведмідь", "вежа", "великдень", "велич", "величина", "вельможа", "верба", "верблюд", "вересень", "вересень", "веретено", "верстат", "вершина", "веселка", "весілля", "весло", "веснянка", "ветеран", "ветеринар", "вечір", "вечірка", "вибір", "вибірка", "вибух", "вивчення", "винахідництво", "винищування", "вишня", "вівторок", "вівця", "водень", "газ", "газета", "газопровід", "гай", "галактика", "галерея", "гаманець", "ганок", "ганчірка", "ганьба", "гараж", "гарантія", "гарбуз", "гардероб", "гармонія", "гаряча", "гасло", "гастроль", "герб", "героїн", "герцог", "гетьман", "гігант", "гідроелектростанція", "гіпермаркет", "гітара", "глагол", "глас", "глобус", "гном", "година", "гол", "голівка", "голова", "голуб", "голубка", "голубці", "гольф", "гора", "горб", "горець", "горизонт", "горілка", "горлиця", "горло", "горобець", "горшок", "госпіталь", "готель", "грабіжник", "град", "гранат", "граніт", "графіка", "грець", "гривня", "гриль", "губа", "гувернантка", "гудзик", "гумор", "гура", "гусак", "гуска", "далекомір", "дама", "датчик", "дах", "дахмат", "дача", "дачник", "дебет", "девальвація", "девіз", "дефіцит", "децентралізація", "джаз", "джерело", "джокер", "дзвін", "дзвінок", "дзига", "диван", "диверсант", "диверсія", "дивертисмент", "дивіденд", "дилема", "диплом", "дипломат", "дипломатія", "директор", "дисертація", "диск", "дисконт", "дискотека", "діагноз", "добре", "довгота", "довідка", "довіра", "договір", "доза", "дозвіл", "долоня", "допомога", "досвід", "дочка", "дошка", "екран", "екскурсія", "експеримент", "експерт", "експертиза", "експлікація", "експлуатація", "експозитура", "експозиція", "експрес", "експресіонізм", "експресія", "експропріація", "екстракт", "екстремал", "ексцентрик", "ексцес", "еластичність", "електорат", "електрик", "електрика", "електричка", "електрод", "електродинаміка", "електромагніт", "електромотор", "електрон", "електроніка", "електростанція", "електротехніка", "елемент", "еліта", "елітаризм", "емаль", "ембарго", "емблема", "емігрант", "еміграція", "емісія", "емоційність", "ендемік", "енергія", "ентузіазм", "енциклопедія", "епоха", "ескадра", "єдність", "ємність", "жаба", "жага", "жанр", "жарт", "жасмин", "жебрак", "желатин", "жемчуг", "жердина", "жеребець", "жерло", "жертва", "живіт", "живопис", "живописець", "жито", "життя", "жінка", "жовтуха", "жовч", "жолудь", "жонглер", "жоржина", "жупан", "журба", "журнал", "журналіст", "завершення", "завіса", "завод", "загарбник", "загарбниця", "загин", "загородження", "заготовка", "загривок", "загроза", "задача", "задоволення", "задум", "заздрість", "зазірка", "зазіхання", "зазубрина", "закон", "закриття", "закуска", "зал", "залежність", "залив", "залізо", "залізобетон", "залізошвейка", "заліка", "заліт", "замах", "замерзання", "заміжжя", "заміс", "замісник", "замкнення", "заможність", "замок", "замороження", "заряд", "зеніт", "зір", "золь - гель", "зошит", "ідентифікація", "ідея", "інвестиція", "інгредієнт", "індекс", "інститут", "інструкція", "інструмент", "інсульт", "інтеграція", "інтелект", "інтелігенція", "інтенсивність", "інтервал", "інтерес", "інтерфейс", "інфекція", "інфляція", "інформація", "інфраструктура", "іспит", "історія", "істота", "їдальня", "їжа", "їжак", "кава", "кавалерія", "кавун", "каденція", "кадет", "кадило", "кадр", "казан", "казарма", "казка", "казкар", "казус", "карбування", "квітень", "кепкування", "керівництво", "керування", "килимарство", "кип'ятильня", "кисень", "кисіль", "кібернетика", "кіготь", "кілобайт", "кілобіт", "кіловат", "кілогерц", "кілограм", "кілометр", "кінестезія", "кінь", "кляуза", "кобальт", "ковальня", "ковбаса", "ковбасар", "ковдра", "коверт", "ковзанка", "ковтання", "козеня", "козенятко", "копіювання", "кража", "красуня", "крейда", "крейсер", "крем", "крематорій", "кремень", "креслення", "кресло", "крига", "крижанка", "криза", "крик", "кримінал", "криміналіст", "криміналістика", "крипта", "криптограма", "криптограф", "криптографія", "кристал", "кристалізація", "кристалограф", "кристалографія", "крісталізм", "крісталографія", "кров", "крокодил", "лава", "лад", "лазня", "лак", "лактоза", "ламантин", "ламініт", "лампа", "ланцюг", "лапа", "латунь", "латфак", "лауреат", "лауреатка", "лауреатство", "лебідь", "левиця", "легенда", "ледоруб", "лекція", "лелека", "ливень", "лизень", "липень", "лис", "ліс", "ложка", "локомотив", "любов", "людина", "малюнок", "мама", "мамонт", "мандарин", "мандат", "мандоліна", "мандрівка", "мандрівник", "манеж", "манекен", "манжета", "манікюр", "маніпуляція", "маніті", "маніфест", "маніфестація", "манор", "мансарда", "мануель", "мануфактура", "марафон", "марганець", "маржа", "маріонетка", "маркер", "маркетинг", "маркіз", "маркіровка", "маркування", "мармур", "марс", "март", "марципан", "марш", "маршрут", "маршрутка", "масаж", "масажист", "масив", "маска", "масон", "масштаб", "матеріал", "матеріалізм", "матерія", "мати", "мафія", "маяк", "маятник", "мед", "медаліст", "медаль", "медіатор", "медовик", "медовуха", "медуза", "межа", "мезонін", "меланж", "меланхолія", "меліорація", "меліса", "мелодія", "мелодрама", "меломан", "мельник", "мемуар", "менеджер", "менеджмент", "менестрель", "менталітет", "меншість", "меню", "мер", "мережа", "мереживо", "меридіан", "меса", "метал", "металург", "металургія", "метаморфоза", "метан", "метастаз", "метастаза", "метафізика", "метафора", "метеор", "метеорит", "метеоролог", "метеорологія", "метис", "метод", "методика", "методологія", "метр", "метрика", "метро", "метроном", "метрополітен", "метрополія", "метушня", "меценат", "меч", "мечеть", "мечник", "новоріччя", "новосілля", "нона", "оазис", "обсяг", "озброєння", "озон", "окам'янілість", "окантовання", "океанарій", "око", "окозамилювання", "окозамилювач", "округлення", "окружність", "октава", "оленя", "оленярство", "олівець", "олігарх", "олійництво", "олімпіада", "олово", "омлет", "омнібус", "омофор", "оракул", "орангутанг", "оранжерея", "ораторство", "організм", "органологія", "орда", "ордер", "ординатура", "орел", "орендар", "оригінал", "оркестр", "павич", "палець", "палиця", "паличка", "палка", "пальто", "панянка", "паразит", "паралакс", "парамедик", "парасолька", "парк", "паркан", "пародист", "пародія", "пароль", "паронім", "партнер", "парубок", "пасаж", "пасажиропотік", "передбачення", "п'єса", "питання", "півень", "півострів", "підмет", "підприємство", "підрозділ", "підступ", "пісок", "пісочниця", "пістолет", "плита", "плівка", "побрехенька", "поверхня", "повінь", "повість", "пов'язка", "покоління", "покрив", "поле", "полеміка", "поліфонія", "полум'я", "полуниця", "порядок", "посилання", "потік", "потреба", "потяг", "похідна", "пошта", "право", "правознавство", "прагматика", "прапор", "прапорець", "праска", "прах", "праця", "праща", "представник", "представниця", "президія", "прейскурант", "претензія", "префікс", "прибор", "прибуток", "призма", "призначення", "призьба", "прийдешність", "приймачка", "прийменник", "прикмета", "прикметник", "прилад", "приманка", "примара", "примітив", "примітка", "примовка", "примус", "примха", "прискорення", "прискорювач", "програма", "програміст", "програмування", "проєкт", "прокляття", "пролог", "проміння", "пропаганда", "пропозиція", "простір", "протокол", "процедура", "публікація", "пугач", "пустеля", "пустир", "радіомережа", "радіоприймач", "редактор", "редиска", "рейдер", "рекапіталізація", "реклама", "релігія", "репортаж", "репродукція", "республіка", "рефлекс", "речення", "речовина", "решітка", "ринок", "рисівництво", "рів", "ріг", "рідина", "різниця", "різновид", "різьба", "рік", "річка", "річниця", "робот", "робота", "роза", "розв'язка", "розрахунок", "розробка", "ромашка", "рослина", "ротор", "рушник", "сагайдак", "сайт", "сало", "салон", "сварка", "свердловина", "світ", "світанок", "світлина", "світло", "секта", "секція", "селище", "село", "середина", "серпанок", "серце", "симфонія", "система", "сіль", "сільгосппродукція", "сільгосптехніка", "склянка", "сковорода", "скрипка", "словник", "слово", "словосполучення", "слон", "служба", "смаколик", "смартофон", "смартфон", "смерека", "смітник", "смуга", "сніг", "собор", "сокира", "сонце", "сопілка", "спадщина", "спис", "спів", "спільник", "спільнота", "спінет", "справа", "спростування", "срібло", "станція", "стиль", "стипендія", "стіл", "стілець", "стіна", "стодола", "столиця", "струм", "струмок", "субота", "суд", "судома", "сума", "сундук", "супермаркет", "схилення", "схід", "сходи", "сямісен", "таємниця", "тарашкевиця", "тарілка", "тварина", "твердь", "твір", "театр", "телекінез", "телепень", "тема", "темперамент", "темрява", "тенета", "теологія", "територія", "термідор", "термін", "термобілизна", "термопаста", "термосумка", "тигр", "тигриця", "тигриця", "тиждень", "тиждень", "тональність", "топологія", "тополя", "топонім", "тор", "торба", "трава", "травень", "травма", "травмпункт", "традиція", "трактат", "транзакція", "транзистор", "транзит", "транскодування", "транскрибування", "транспаретність", "транспорт", "трансферт", "тромбон", "тропа", "троща", "троянда", "трубопровід", "труд", "тубдиспансер", "туберкульоз", "туман", "тур", "турбаза", "туш", "тюкування", "тютюн", "увічнення", "ультиматум", "ультразвук", "умова", "унезалежнення", "університет", "упаковування", "упертість", "уран", "уряд", "усікновення", "усмішка", "установа", "уфологія", "ухвала", "учасниця", "ущільнювач", "уявлення", "фабрика", "фабула", "фагот", "фаготист", "файл", "фактор", "фах", "філіжанка", "філологія", "флажолет", "флажолет", "фламінго", "флейта", "флейтист", "Флейчук", "флешбек", "флігель", "форма", "фортепіано", "фортеця", "форум", "фотоапарат", "футбол", "хазяйство", "халабуда", "халва", "халтура", "хартія", "хата", "хвилина", "хвиля", "хвіртка", "хвіст", "хвороба", "хід", "хіміопрепарат", "хімія", "хінді", "хіротонія", "хліб", "хлібець", "хлів", "ходьба", "хокей", "холодець", "храм", "хронологія", "хрускіт", "хунта", "цвіль", "цвіт", "цвітень", "цвітіння", "цегельня", "цегельня", "цеглярка", "цеглярка", "целюлоїд", "цемент", "цем'янка", "цензура", "церква", "цефеїди", "цех", "цивілізація", "цивілізованість", "циклон", "циклон", "циклоп", "циліндр", "циліндричність", "цилюрня", "цимбали", "цинізм", "цитадель", "цитата", "цитологія", "цитрус", "цитруси", "цицька", "цілеспрямованість", "цілісність", "ціль ", "цільність", "ціна", "цінність", "чагарник", "чай", "чайка", "чайник", "чайонка", "час", "часник", "часомір", "часопис", "частина", "частинка", "частка", "частота", "чат", "чача", "чаша", "чвертка", "чверть", "чемодан", "чемпіон", "чемпіонат", "чепчик", "череда", "чередник", "черемха", "череп", "черепиця", "черешня", "четвірка", "шампанське", "шанс", "шапка", "шапля", "шарф", "шашлик", "швачка", "швея", "шериф", "шерпа", "шерсть", "шинка", "шинкар", "шинкарка", "ширина", "ширма", "шістка", "шкарпетка", "шкода", "школа", "шлунок", "шлюб", "шоколад", "штрих", "щабель", "щавель", "щедрість", "щенок", "щеня", "щетина", "щиколотка", "щипці", "щит", "щитка", "щітка", "щіткар", "щоденник", "щоденниця", "щука", "щукач", "щур", "юань", "ювелір", "ювелірка", "юнак", "юнга", "юнга", "юність", "юриспруденція", "юрист", "юстифікація", "юстиція", "юстиціяр", "юстиціярка", "ягідка", "ягідник", "ягниця", "ягода", "ягода", "ядро", "яєчня", "язик", "язичник", "яйце", "якість", "якість", "яловичина", "яма", "ямб", "янтар", "ярмо", "ясла", "ясна", "ясність" };
		/* розімр словникової бази */
		size = words.size();

		/*найдовше слово*/
		maxwordlength = 0;
		for (int i = 0; i < words.size(); i++)
			if (words[i].length() > maxwordlength) maxwordlength = words[i].length();
	}

	string GetWord(int num) override
	{
		return words[num];

	}
	int GetSize() override
	{
		return size;
	}
	int GetMaxWordLength() override
	{
		return maxwordlength;
	}

	void Show() override // тестова функція
	{
		for (int i = 0; i < words.size(); i++)
			cout << words[i] << endl;
	}
};

class ExternalVocabulary : public AbstractVocabulary// зовнішній словник 
{
private:
	FILE* in;
	char buff[100];
public:

	ExternalVocabulary()
	{
		try
		{
			in = fopen("vocabulary.txt", "r");
			if (!in) throw "Не вдалося завантажити файл словника\n";
			while (fgets(buff, sizeof(buff), in))
			{
				char* token = strtok(buff, " ");
				while (token != nullptr)
				{
					words.push_back(token);
					token = strtok(nullptr, " ");
				}
			}
			size = words.size();
		}
		catch (const char* str) {
			cout << str;
			throw -1;
		}
	}

	string GetWord(int num) override
	{
		return words[num];

	}
	int GetSize() override
	{
		return size;
	}
	int GetMaxWordLength() override
	{
		return maxwordlength;
	}
	void Show() override // тестова
	{
		for (int i = 0; i < size; i++)
		{
			cout << words[i];
		}
	}
};


class WordLength // Налаштування довжини слова
{
protected:
	int length;

public:
	WordLength(int max)
	{
		int temp;
		cout << "Введіть мінімальну довжину слова. Максимальне значення: " << max << endl;
		do
		{
			cin >> temp;
			if (temp > max)  cout << "Значення не може перевищувати максимальне значення. Спробуйте ще раз.\n";
		} while (temp > max);
		length = temp;
	}

	int GetLength()
	{
		return length;
	}
};

class AttemptsNumber // налаштування кількості спроб
{
protected:
	int attempts;

public:
	AttemptsNumber()
	{
		int tempvalue;
		string temp;
		cout << "Виберіть режим: 1 - 6 спроб, 2 - 8 спроб" << endl;
		do
		{
			cin >> temp;
			if (temp == "1") tempvalue = 6;
			else if (temp == "2") tempvalue = 8;
			else cout << "Спробуйте ще раз. Виберіть 1 або 2\n";
		} while (temp != "1" && temp != "2");
		attempts = tempvalue;
	}
	int GetNumber()
	{
		return attempts;
	}
};

class Mode // Налаштування гри
{
private:
	WordLength* wordlength;
	AttemptsNumber* attemptsnumber;

public:
	Mode(WordLength* wordlength, AttemptsNumber* attemptsnumber)
		: wordlength(wordlength), attemptsnumber(attemptsnumber) {}

	int GetLength()
	{
		return wordlength->GetLength();
	}
	int GetNumber()
	{
		return attemptsnumber->GetNumber();
	}
};


class Choice // генерація випадкових чисел 
{
private:
	int choice;
public:
	Choice(AbstractVocabulary *vocabulary) : choice(rand() % vocabulary->GetSize()) {};
	int GetChoice()
	{
		return choice;
	}
};

class Word // слово зі словника
{
private:
	string word;
	int length;
public:
	Word(string word) : word(word) {
		length = word.length();
	}
	bool Iflength(int length)
	{
		if (this->length >= length) return true;
		else return false;
	}
	Word(Choice num, int wordlength, AbstractVocabulary *vocabulary)
	{
		bool iflength = false;
		int choice = num.GetChoice();
		int temp = choice;
		bool trigger = true;
		do
		{
			Word tempword(vocabulary->GetWord(choice));
			if (tempword.Iflength(wordlength)) { word = tempword.GetWord(); break; }
			else
			{
				if (choice < vocabulary->GetSize() - 1 && trigger) choice++;
				else {
					trigger = false;  temp--; choice = temp;
				};
			}
		} while (true);
		length = word.length();
	};
	string GetWord()
	{
		return word;
	}
	int GetLength()
	{
		return length;
	}
	void Show()
	{
		cout << word << endl;
	}
};

class Letter
{
private:
	char letter;
public:
	void SetLetter()
	{
		char temp;
		Message(11, "Введіть літеру\n");
		cin >> temp;
		letter = temp;
	}

	char GetLetter()
	{
		return letter;
	}
	void Show()
	{
		cout << letter;
	}

};


class Figure
{
private:
	int attempts;
public:
	Figure(int attempts) : attempts(attempts) {};


	void Draw(int attempt)
	{
		switch (attempt)
		{
		case 8:
			Color(12);
			cout << "-----------------\n"
				<< "|         |      \n"
				<< "|         |      \n"
				<< "|         O      \n"
				<< "|         |      \n"
				<< "|        / \\      \n"
				<< "|       /    \\     \n"
				<< "|                 \n";
			Color(7);
			break;
		case 7:
			Color(14);
			cout << "-----------------\n"
				<< "|         |      \n"
				<< "|         |      \n"
				<< "|         O      \n"
				<< "|         |      \n"
				<< "|        / \\      \n"
				<< "|       /         \n"
				<< "|                 \n";
			Color(7);
			break;
		case 6:
			if (attempts == 6) Color(12);
			cout << "-----------------\n"
				<< "|         |      \n"
				<< "|         O      \n"
				<< "|        -|-     \n"
				<< "|        / \\      \n"
				<< "|                 \n";
			Color(7);
			break;
		case 5:
			if (attempts == 6) Color(14);
			cout << "-----------------\n"
				<< "|         |      \n"
				<< "|         O      \n"
				<< "|        -|-     \n"
				<< "|        /      \n"
				<< "|                 \n";
			Color(7);
			break;
		case 4:
			cout << "-----------------\n"
				<< "|         |      \n"
				<< "|         O      \n"
				<< "|        -|-     \n"
				<< "|                \n"
				<< "|                 \n";
			break;
		case 3:
			cout << "-----------------\n"
				<< "|         |      \n"
				<< "|         O      \n"
				<< "|        -|      \n"
				<< "|                \n"
				<< "|                 \n";
			break;
		case 2:
			cout << "-----------------\n"
				<< "|         |      \n"
				<< "|         O      \n"
				<< "|         |      \n"
				<< "|                \n"
				<< "|                 \n";
			break;
		case 1:
			cout << "-----------------\n"
				<< "|         |      \n"
				<< "|         O      \n"
				<< "|                \n"
				<< "|                \n"
				<< "|                 \n";
			break;
		default:
			cout << "-----------------\n"
				<< "|         |      \n"
				<< "|                \n"
				<< "|                \n"
				<< "|                \n"
				<< "|                 \n";
			break;

		}

	}
};

class WordTable
{
private:
	Word* word;
	Figure* figure;
	Letter letter;
	Mode* mode;
	int length; //довжина слова
	bool* ifopen;// перевірка чи відкрито літеру
	int attempts; // невдалі спроби
	char* falseletters = nullptr;
	bool victory;// сигнал до завершення гри (перемога)
	bool failure;// сигнал до завершення гри (поразка)


public:
	WordTable(Word* word, Figure* figure, Mode* mode) : word(word), figure(figure), mode(mode)
	{
		length = word->GetLength();
		ifopen = new bool[length];
		for (int i = 0; i < length; i++)
			ifopen[i] = false; // від початку усі літери закриті
		attempts = 0;
		
		victory = false;
		failure = false;
	}

	WordTable(const WordTable& obj)
	{
		length = obj.length;
		attempts = obj.attempts;
		ifopen = new bool[length];
		for (int i = 0; i < length; i++)
		{
			ifopen[i] = obj.ifopen[i];
		}
		falseletters = new char[attempts];
		for (int i = 0; i < attempts; i++)
		{
			falseletters[i] = obj.falseletters[i];
		}
		word = obj.word;
		figure = obj.figure;
		letter = obj.letter;
		mode = obj.mode;
		victory = obj.victory;
		failure = obj.failure;
	}

	bool IfFinish() // якщо спроби вичерпано
	{
		if (attempts == mode->GetNumber())
		{
			failure = true;
			return true;
		}
		for (int i = 0; i < length; i++)
		{
			if (ifopen[i] != true) return false;
		}
		victory = true; return true;
	}

	void OpenLetter() // відкриваємо літери
	{
		bool success = false;
		letter.SetLetter();
		for (int i = 0; i < length; i++)
			if (word->GetWord()[i] == letter.GetLetter())
			{
				ifopen[i] = true; success = true;
			}
		if (!success) AddFalseLetter(letter);
		Show();

		if (!IfFinish()) OpenLetter(); // якщо спроби вичерпано
		else if (victory)
		{
			Message(10, "Ви вгадали!\n");

		}
		else if (failure)
		{
			Message(12, "Не вгадали!\n");

			word->Show();
		}
	}

	void AddFalseLetter(Letter letter)
	{
		char* temp = new char[attempts + 1];
		for (int i = 0; i < attempts; i++)
		{
			temp[i] = falseletters[i];
		}
		delete[] falseletters;
		temp[attempts] = letter.GetLetter();
		falseletters = temp;
		attempts++;
	}

	void Show()
	{
		system("cls");
		cout << endl;
		Message(11, "Слово: ");
		Color(15);
		for (int i = 0; i < length; i++)
			if (!ifopen[i]) cout << "_ ";
			else cout << word->GetWord()[i] << " ";
		cout << endl;
		Message(11, "Помилки: ");
		Color(12);
		for (int i = 0; i < attempts; i++)
		{
			cout << falseletters[i];
			if (i < attempts - 1) cout << ", ";
			else cout << ".\n";
		}
		Color(7);
		cout << endl;
		figure->Draw(attempts);
	}

	bool GetResult()
	{
		if (victory) return true;
		if (failure) return false;
	}

	~WordTable()
	{
		delete[] ifopen;
		delete[] falseletters;
	}

};

class Timer
{
private:
	int start;
	int end;
public:
	Timer() : start(clock()) {}
	void TimeSpent()
	{
		end = clock();
		cout << "\nВитрачено " << float(end - start) / 1000 << " секунд";
	}
};

class Music
{
private:
	WordTable* wordtable;
public:
	Music(WordTable* wordtable) : wordtable(wordtable) {};
	void Play()
	{
		if (wordtable->GetResult())
		{
			Beep(277, 200); Beep(349, 200); Beep(415, 200); Beep(554, 800);
		}
		else
		{
			Beep(392, 200); Beep(392, 200); Beep(392, 200); Beep(311, 800);
		}
	}
};





int main()
{
	setlocale(LC_ALL, "ukr");
	SetConsoleOutputCP(1251);
	SetConsoleCP(1251);
	srand(time(NULL));

	/*Словник*/
	try {
	AbstractVocabulary* vocabulary = new ExternalVocabulary;


	vocabulary->Show(); system("pause"); //Тест: виводимо на екран слово, загадане комп'ютером, під час гри ця функція має бути вимкнена


	/* Встановлюмо налаштування */
	WordLength wordlength(vocabulary->GetMaxWordLength());
	AttemptsNumber attemptsnumber;
	Mode gamemode(&wordlength, &attemptsnumber);

	/* Комп'ютер загадує слово */
	Choice choice(vocabulary);
	Word word(choice, gamemode.GetLength(), vocabulary);
	Figure figure(gamemode.GetNumber());
	WordTable wordtable(&word, &figure, &gamemode);


	/* Гра */

	wordtable.Show();
	Timer timer;
	wordtable.OpenLetter();
	timer.TimeSpent();
	Music music(&wordtable);
	music.Play();

	delete vocabulary;
}

	catch (int) {};

}
